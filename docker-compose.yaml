version: "3"

services:
  question-service:
    container_name: question-service 
    build:
      dockerfile: Dockerfile.dev
      context: ./question-service
    command: npm start
    ports:
      - "8081:8081"
    
  matching-service:
    container_name: matching-service
    build:
      dockerfile: Dockerfile.dev
      context: ./matching-service
    command: sh -c '/bin/wait-for-it.sh rabbitmq:5672 --timeout=30 -- npm start'
    ports:
      - "8001:8001"
    environment:
      ENV: production
      MQ_CONN_URL: amqp://guest:guest@rabbitmq:5672
      URI_COLLAB_SVC: collab-service:8080
    depends_on:
      - rabbitmq
      - collab-service
  
  user-service:
    container_name: user-service
    build:
      dockerfile: Dockerfile.dev
      context: ./user-service
    command: npm start
    ports:
      - "8000:8000"
    environment:
      ENV: production
      DB_LOCAL_URI: mongodb://mongo:27017/user
    depends_on:
      - mongo
  
  collab-service:
    container_name: collab-service
    build:
      dockerfile: Dockerfile.dev
      context: ./collab-service
    command: npm start
    ports:
      - "8080:8080"
    environment:
      ENV: production
      DB_LOCAL_URI: mongodb://mongo:27017/collab
      PORT: 8080
      URI_QUESTION_SVC: http://question-service:8081
    depends_on:
      - mongo
      - question-service

  communication-service:
    container_name: communication-service
    build:
      dockerfile: Dockerfile.dev
      context: ./communication-service
    command: npm start
    ports:
      - "9000:9000"
  
  frontend:
    container_name: frontend
    build:
      dockerfile: Dockerfile.dev
      context: ./frontend
    command: npm start
    ports:
      - "3000:3000"
    environment:
      REACT_APP_URI_CHAT_SVC: http://localhost:9000
      REACT_APP_URI_SESSION_SVC: http://localhost:8080
      REACT_APP_URI_MATCHING_SVC: http://localhost:8001
      REACT_APP_URI_QUESTION_SVC: http://localhost:8081
      REACT_APP_URI_USER_SVC: http://localhost:8000
    depends_on:
      - question-service
      - matching-service
      - user-service 
      - collab-service
      - communication-service
  

  mongo:
    container_name: mongo-node
    image: mongo:4.4.14
    ports:
      - "27017:27017"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: 12345
  
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq
    ports:
        - 5672:5672
        - 15672:15672
    volumes:
        - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
        - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    
  nginx:
    restart: always
    build:
      context: ./nginx
    ports:
      - 80:80
    depends_on:
      - frontend